"""
57. Wolf of Wall Street
Easy
https://binarysearch.com/problems/Wolf-of-Wall-Street

Given a list of integers prices representing the stock prices of a company in 
chronological order, return the maximum profit you could have made from buying and selling that stock once.

You must buy before you can sell it.

Note: You are not required to buy or sell the stock.

Constraints

n â‰¤ 100,000 where n is the length of prices
"""


def solve(prices):
    profits = 0
    for idx, num in enumerate(prices):
        for n in prices[idx + 1:]:
            if profits < (n - num):
                profits = (n - num)
 
    return profits


if __name__ == "__main__":
    print(solve([1, 2, 3, 4, 5, 6]))  #5
    print(solve([9, 11, 8, 5, 7, 10]))  #5
    print(solve([1, 2, 3, 4, 5, 6, 7, 8, 9]))   #8
    print(solve([9, 8, 7, 6, 5, 4, 3, 2, 1]))   #0
    print(solve([]))   #0
    print(solve([0]))   #0


#%%
