"""
750. Check if Number Is Perfect Square
Easy
https://binarysearch.com/problems/Check-if-Number-Is-Perfect-Square

Given an integer n, return whether n = k * k for some integer k.

This should be done without using built-in square root function.
"""

class Solution:
    def solve(self, n):
        square = n**.5
        return square - int(square) == 0

if __name__ == "__main__":
    print(Solution().solve(25))

# Success! Your code took 21 milliseconds — faster than 90.86% in Python


#%%

# Evidently, the site did not want a mathematical answer.
# Instead, let's go searching through numbers ranging up to n.

class Solution:
    def solve(self, n):
        left = 0
        right = n

        while left <= right:
            middle = (left + right) // 2
            squared = middle ** 2

            if squared < n:
                left = middle + 1
            elif squared > n:
                right = middle - 1
            else:   #squared == n:
                return True

        return False


if __name__ == "__main__":
    print(Solution().solve(25))

# Success! Your code took 97 milliseconds — faster than 40.76% in Python

